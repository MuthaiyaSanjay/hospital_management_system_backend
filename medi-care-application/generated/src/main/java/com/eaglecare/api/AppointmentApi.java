/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.0.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.eaglecare.api;

import com.eaglecare.model.Appointment;
import java.math.BigDecimal;
import java.util.Date;
import org.springframework.format.annotation.DateTimeFormat;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-10-12T00:33:25.588524200+05:30[Asia/Calcutta]")
@Validated
@Tag(name = "Appointment", description = "Operations about appointments")
public interface AppointmentApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /v1/api/appointments : Creation of new Appointment
     * Return the list values
     *
     * @param appointment Appointment creation payload (required)
     * @return successful operation (status code 200)
     *         or Invalid user id (status code 400)
     */
    @Operation(
        operationId = "bookAppointment",
        summary = "Creation of new Appointment",
        tags = { "Appointment" },
        responses = {
            @ApiResponse(responseCode = "200", description = "successful operation", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Appointment.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid user id")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/v1/api/appointments",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Appointment> _bookAppointment(
        @Parameter(name = "Appointment", description = "Appointment creation payload", required = true) @Valid @RequestBody Appointment appointment
    ) {
        return bookAppointment(appointment);
    }

    // Override this method
    default  ResponseEntity<Appointment> bookAppointment(Appointment appointment) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"doctor\" : { \"professional_information\" : { \"qualifications\" : \"MBBS.MS\", \"years_of_experience\" : 10.6, \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"medical_license_number\" : \"8975469532\" }, \"basic_info\" : { \"role\" : { \"name\" : \"ROLE_USER\", \"description\" : \"User role\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }, \"gender\" : \"Male\", \"user_id\" : \"fb17eecf-5ec6-4c13-a5bd-5ce1451472d0\", \"last_name\" : \"Aravind\", \"employment_details\" : { \"joining_date\" : \"2024-11-05T00:00:00Z\", \"relieving_date\" : \"2024-11-05T00:00:00Z\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"payroll\" : { \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"gross_amount\" : 0.8008282, \"net_amount\" : 1.4658129, \"deductions\" : 6.0274563, \"user\" : \"user\", \"payment_date\" : \"2024-11-05T00:00:00Z\" }, \"department\" : \"CLINIC_STAFF\", \"salary\" : 18500 }, \"first_name\" : \"Sastika\" }, \"contact\" : { \"address\" : { \"country\" : \"India\", \"geo_location\" : \"India\", \"pin\" : \"624601\", \"city\" : \"Coimabtore\", \"street\" : \"121,Balaji Nagar\", \"address_category\" : \"Personal\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"state\" : \"Tamilnadu\" }, \"phone\" : \"7010192967\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"email\" : \"aravind@gmail.com\" }, \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }, \"appointment_time\" : \"10:00 AM\", \"patient\" : { \"basic_info\" : { \"role\" : { \"name\" : \"ROLE_USER\", \"description\" : \"User role\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }, \"gender\" : \"Male\", \"user_id\" : \"fb17eecf-5ec6-4c13-a5bd-5ce1451472d0\", \"last_name\" : \"Aravind\", \"employment_details\" : { \"joining_date\" : \"2024-11-05T00:00:00Z\", \"relieving_date\" : \"2024-11-05T00:00:00Z\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"payroll\" : { \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"gross_amount\" : 0.8008282, \"net_amount\" : 1.4658129, \"deductions\" : 6.0274563, \"user\" : \"user\", \"payment_date\" : \"2024-11-05T00:00:00Z\" }, \"department\" : \"CLINIC_STAFF\", \"salary\" : 18500 }, \"first_name\" : \"Sastika\" }, \"contact\" : { \"address\" : { \"country\" : \"India\", \"geo_location\" : \"India\", \"pin\" : \"624601\", \"city\" : \"Coimabtore\", \"street\" : \"121,Balaji Nagar\", \"address_category\" : \"Personal\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"state\" : \"Tamilnadu\" }, \"phone\" : \"7010192967\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"email\" : \"aravind@gmail.com\" }, \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }, \"appointment_date\" : \"2024-11-05T00:00:00Z\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /v1/api/appointments/{id} : Delete Appointment
     * Delete Appointment by id
     *
     * @param id Appointment Id (required)
     * @return successful operation (status code 200)
     *         or Invalid Appointment id (status code 400)
     */
    @Operation(
        operationId = "deleteAppointmentById",
        summary = "Delete Appointment",
        tags = { "Appointment" },
        responses = {
            @ApiResponse(responseCode = "200", description = "successful operation", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = String.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid Appointment id")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/v1/api/appointments/{id}",
        produces = { "application/json" }
    )
    default ResponseEntity<String> _deleteAppointmentById(
        @Parameter(name = "id", description = "Appointment Id", required = true) @PathVariable("id") String id
    ) {
        return deleteAppointmentById(id);
    }

    // Override this method
    default  ResponseEntity<String> deleteAppointmentById(String id) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "\"Appointment removed successfully\"";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /v1/api/appointments/{id} : Get appointment by id
     * Appoinment details
     *
     * @param id Appoinment Id (required)
     * @return successful operation (status code 200)
     *         or Invalid Appointment id (status code 400)
     */
    @Operation(
        operationId = "getAppoinmentById",
        summary = "Get appointment by id",
        tags = { "Appointment" },
        responses = {
            @ApiResponse(responseCode = "200", description = "successful operation", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Appointment.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid Appointment id")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/v1/api/appointments/{id}",
        produces = { "application/json" }
    )
    default ResponseEntity<Appointment> _getAppoinmentById(
        @Parameter(name = "id", description = "Appoinment Id", required = true) @PathVariable("id") String id
    ) {
        return getAppoinmentById(id);
    }

    // Override this method
    default  ResponseEntity<Appointment> getAppoinmentById(String id) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"doctor\" : { \"professional_information\" : { \"qualifications\" : \"MBBS.MS\", \"years_of_experience\" : 10.6, \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"medical_license_number\" : \"8975469532\" }, \"basic_info\" : { \"role\" : { \"name\" : \"ROLE_USER\", \"description\" : \"User role\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }, \"gender\" : \"Male\", \"user_id\" : \"fb17eecf-5ec6-4c13-a5bd-5ce1451472d0\", \"last_name\" : \"Aravind\", \"employment_details\" : { \"joining_date\" : \"2024-11-05T00:00:00Z\", \"relieving_date\" : \"2024-11-05T00:00:00Z\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"payroll\" : { \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"gross_amount\" : 0.8008282, \"net_amount\" : 1.4658129, \"deductions\" : 6.0274563, \"user\" : \"user\", \"payment_date\" : \"2024-11-05T00:00:00Z\" }, \"department\" : \"CLINIC_STAFF\", \"salary\" : 18500 }, \"first_name\" : \"Sastika\" }, \"contact\" : { \"address\" : { \"country\" : \"India\", \"geo_location\" : \"India\", \"pin\" : \"624601\", \"city\" : \"Coimabtore\", \"street\" : \"121,Balaji Nagar\", \"address_category\" : \"Personal\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"state\" : \"Tamilnadu\" }, \"phone\" : \"7010192967\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"email\" : \"aravind@gmail.com\" }, \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }, \"appointment_time\" : \"10:00 AM\", \"patient\" : { \"basic_info\" : { \"role\" : { \"name\" : \"ROLE_USER\", \"description\" : \"User role\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }, \"gender\" : \"Male\", \"user_id\" : \"fb17eecf-5ec6-4c13-a5bd-5ce1451472d0\", \"last_name\" : \"Aravind\", \"employment_details\" : { \"joining_date\" : \"2024-11-05T00:00:00Z\", \"relieving_date\" : \"2024-11-05T00:00:00Z\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"payroll\" : { \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"gross_amount\" : 0.8008282, \"net_amount\" : 1.4658129, \"deductions\" : 6.0274563, \"user\" : \"user\", \"payment_date\" : \"2024-11-05T00:00:00Z\" }, \"department\" : \"CLINIC_STAFF\", \"salary\" : 18500 }, \"first_name\" : \"Sastika\" }, \"contact\" : { \"address\" : { \"country\" : \"India\", \"geo_location\" : \"India\", \"pin\" : \"624601\", \"city\" : \"Coimabtore\", \"street\" : \"121,Balaji Nagar\", \"address_category\" : \"Personal\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"state\" : \"Tamilnadu\" }, \"phone\" : \"7010192967\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"email\" : \"aravind@gmail.com\" }, \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }, \"appointment_date\" : \"2024-11-05T00:00:00Z\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /v1/api/appointments : Get Appointments
     * Get Appointment list by params
     *
     * @param page Page number (required)
     * @param count Data count (required)
     * @param appointmentDate ppointment Date in mm-dd-yyyy format (optional)
     * @param patientId Patient ID (optional, default to 45689)
     * @param doctorId Doctor ID (optional, default to 45689)
     * @param phoneNumber Patient Phone number (optional, default to 45689)
     * @return successful operation (status code 200)
     *         or Invalid user id (status code 400)
     */
    @Operation(
        operationId = "getAppointments",
        summary = "Get Appointments",
        tags = { "Appointment" },
        responses = {
            @ApiResponse(responseCode = "200", description = "successful operation", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Appointment.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid user id")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/v1/api/appointments",
        produces = { "application/json" }
    )
    default ResponseEntity<List<Appointment>> _getAppointments(
        @NotNull @Parameter(name = "page", description = "Page number", required = true) @Valid @RequestParam(value = "page", required = true, defaultValue = "0") BigDecimal page,
        @NotNull @Parameter(name = "count", description = "Data count", required = true) @Valid @RequestParam(value = "count", required = true, defaultValue = "5") BigDecimal count,
        @Parameter(name = "appointmentDate", description = "ppointment Date in mm-dd-yyyy format") @Valid @RequestParam(value = "appointmentDate", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) Date appointmentDate,
        @Parameter(name = "patientId", description = "Patient ID") @Valid @RequestParam(value = "patientId", required = false, defaultValue = "45689") String patientId,
        @Parameter(name = "doctorId", description = "Doctor ID") @Valid @RequestParam(value = "doctorId", required = false, defaultValue = "45689") String doctorId,
        @Parameter(name = "phoneNumber", description = "Patient Phone number") @Valid @RequestParam(value = "phoneNumber", required = false, defaultValue = "45689") String phoneNumber
    ) {
        return getAppointments(page, count, appointmentDate, patientId, doctorId, phoneNumber);
    }

    // Override this method
    default  ResponseEntity<List<Appointment>> getAppointments(BigDecimal page, BigDecimal count, Date appointmentDate, String patientId, String doctorId, String phoneNumber) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"doctor\" : { \"professional_information\" : { \"qualifications\" : \"MBBS.MS\", \"years_of_experience\" : 10.6, \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"medical_license_number\" : \"8975469532\" }, \"basic_info\" : { \"role\" : { \"name\" : \"ROLE_USER\", \"description\" : \"User role\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }, \"gender\" : \"Male\", \"user_id\" : \"fb17eecf-5ec6-4c13-a5bd-5ce1451472d0\", \"last_name\" : \"Aravind\", \"employment_details\" : { \"joining_date\" : \"2024-11-05T00:00:00Z\", \"relieving_date\" : \"2024-11-05T00:00:00Z\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"payroll\" : { \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"gross_amount\" : 0.8008282, \"net_amount\" : 1.4658129, \"deductions\" : 6.0274563, \"user\" : \"user\", \"payment_date\" : \"2024-11-05T00:00:00Z\" }, \"department\" : \"CLINIC_STAFF\", \"salary\" : 18500 }, \"first_name\" : \"Sastika\" }, \"contact\" : { \"address\" : { \"country\" : \"India\", \"geo_location\" : \"India\", \"pin\" : \"624601\", \"city\" : \"Coimabtore\", \"street\" : \"121,Balaji Nagar\", \"address_category\" : \"Personal\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"state\" : \"Tamilnadu\" }, \"phone\" : \"7010192967\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"email\" : \"aravind@gmail.com\" }, \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }, \"appointment_time\" : \"10:00 AM\", \"patient\" : { \"basic_info\" : { \"role\" : { \"name\" : \"ROLE_USER\", \"description\" : \"User role\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }, \"gender\" : \"Male\", \"user_id\" : \"fb17eecf-5ec6-4c13-a5bd-5ce1451472d0\", \"last_name\" : \"Aravind\", \"employment_details\" : { \"joining_date\" : \"2024-11-05T00:00:00Z\", \"relieving_date\" : \"2024-11-05T00:00:00Z\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"payroll\" : { \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"gross_amount\" : 0.8008282, \"net_amount\" : 1.4658129, \"deductions\" : 6.0274563, \"user\" : \"user\", \"payment_date\" : \"2024-11-05T00:00:00Z\" }, \"department\" : \"CLINIC_STAFF\", \"salary\" : 18500 }, \"first_name\" : \"Sastika\" }, \"contact\" : { \"address\" : { \"country\" : \"India\", \"geo_location\" : \"India\", \"pin\" : \"624601\", \"city\" : \"Coimabtore\", \"street\" : \"121,Balaji Nagar\", \"address_category\" : \"Personal\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"state\" : \"Tamilnadu\" }, \"phone\" : \"7010192967\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"email\" : \"aravind@gmail.com\" }, \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }, \"appointment_date\" : \"2024-11-05T00:00:00Z\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /v1/api/appointments/{id} : Update Appointment
     * Update Appointment data
     *
     * @param id Appointment Id (required)
     * @param appointment Update an existent user (required)
     * @return successful operation (status code 200)
     *         or Invalid Appointment id (status code 400)
     */
    @Operation(
        operationId = "updateAppointment",
        summary = "Update Appointment",
        tags = { "Appointment" },
        responses = {
            @ApiResponse(responseCode = "200", description = "successful operation", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Appointment.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid Appointment id")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/v1/api/appointments/{id}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Appointment> _updateAppointment(
        @Parameter(name = "id", description = "Appointment Id", required = true) @PathVariable("id") String id,
        @Parameter(name = "Appointment", description = "Update an existent user", required = true) @Valid @RequestBody Appointment appointment
    ) {
        return updateAppointment(id, appointment);
    }

    // Override this method
    default  ResponseEntity<Appointment> updateAppointment(String id, Appointment appointment) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"doctor\" : { \"professional_information\" : { \"qualifications\" : \"MBBS.MS\", \"years_of_experience\" : 10.6, \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"medical_license_number\" : \"8975469532\" }, \"basic_info\" : { \"role\" : { \"name\" : \"ROLE_USER\", \"description\" : \"User role\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }, \"gender\" : \"Male\", \"user_id\" : \"fb17eecf-5ec6-4c13-a5bd-5ce1451472d0\", \"last_name\" : \"Aravind\", \"employment_details\" : { \"joining_date\" : \"2024-11-05T00:00:00Z\", \"relieving_date\" : \"2024-11-05T00:00:00Z\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"payroll\" : { \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"gross_amount\" : 0.8008282, \"net_amount\" : 1.4658129, \"deductions\" : 6.0274563, \"user\" : \"user\", \"payment_date\" : \"2024-11-05T00:00:00Z\" }, \"department\" : \"CLINIC_STAFF\", \"salary\" : 18500 }, \"first_name\" : \"Sastika\" }, \"contact\" : { \"address\" : { \"country\" : \"India\", \"geo_location\" : \"India\", \"pin\" : \"624601\", \"city\" : \"Coimabtore\", \"street\" : \"121,Balaji Nagar\", \"address_category\" : \"Personal\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"state\" : \"Tamilnadu\" }, \"phone\" : \"7010192967\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"email\" : \"aravind@gmail.com\" }, \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }, \"appointment_time\" : \"10:00 AM\", \"patient\" : { \"basic_info\" : { \"role\" : { \"name\" : \"ROLE_USER\", \"description\" : \"User role\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }, \"gender\" : \"Male\", \"user_id\" : \"fb17eecf-5ec6-4c13-a5bd-5ce1451472d0\", \"last_name\" : \"Aravind\", \"employment_details\" : { \"joining_date\" : \"2024-11-05T00:00:00Z\", \"relieving_date\" : \"2024-11-05T00:00:00Z\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"payroll\" : { \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"gross_amount\" : 0.8008282, \"net_amount\" : 1.4658129, \"deductions\" : 6.0274563, \"user\" : \"user\", \"payment_date\" : \"2024-11-05T00:00:00Z\" }, \"department\" : \"CLINIC_STAFF\", \"salary\" : 18500 }, \"first_name\" : \"Sastika\" }, \"contact\" : { \"address\" : { \"country\" : \"India\", \"geo_location\" : \"India\", \"pin\" : \"624601\", \"city\" : \"Coimabtore\", \"street\" : \"121,Balaji Nagar\", \"address_category\" : \"Personal\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"state\" : \"Tamilnadu\" }, \"phone\" : \"7010192967\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\", \"email\" : \"aravind@gmail.com\" }, \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }, \"appointment_date\" : \"2024-11-05T00:00:00Z\", \"id\" : \"4acd0b30-0ac1-4d0f-938b-c7b86d804375\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
